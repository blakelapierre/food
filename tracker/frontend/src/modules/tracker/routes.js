/* !!!!!!! WARNING! This file is autogenerated. DO NOT MODIFY !!!!!!! */
export default ['$routeProvider', $routeProvider => {
  const routerController = [
    '$scope', '$routeParams',
    ($scope, $routeParams) => Object.assign($scope, $routeParams)
  ];

  // Allows you to wire a route to a specific item in a database.
  // Currently, this is equivalent to grabbing a value from a
  // key-value store based on a user provided parameter in the URL
  const dataController = [
    '$scope', '$routeParams', 'dataStore',
    ($scope, $routeParams, dataStore) => {
      const something = reduce($routeParams, (params, value, name) => {
        const [store, index] = name.match(/(\b|[A-Z]+)[a-z]*/g);

        console.log({name, value, store, index});

        params[store] = dataStore[`get${capitalize(store)}By${index}`](value);

        return params;
      });

      console.log({$scope, dataStore, something});

      Object.assign($scope, something);

      function capitalize(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
      }
    }
  ];

  $routeProvider
      .when('/', {
      template: '<main></main>'
    })
    .otherwise({
      template: 'Where\'d you come from?'
    });

  function reduce(list, fn, initial = {}) {
    let state = initial;
    for (let key in list) state = fn(state, list[key], key);
    return state;
  }
}];
/* !!!!!!! WARNING! This file is autogenerated. DO NOT MODIFY !!!!!!! */